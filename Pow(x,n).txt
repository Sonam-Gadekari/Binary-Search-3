Time Complexity: O(logn)
Space Complexity: none.
Approach: Iterative approach
class Solution {
    public double myPow(double x, int n) {
        double result=1;
        if(n<0){
            x=1/x;
			n=n*-1;
        }
        while(n!=0){
            if(n%2!=0){
                result=result*x;
            }
            x=x*x;
            n=n/2;
        }
        return result;
    }
}

Time Complexity: O(log n)
Space Complexity: none.
Approach: Recursive approach
class Solution {
    double result=1;
    public double myPow(double x, int n) {
       if(n==0) return 1;        
        myPow(x,n/2);
        if(n<0) x=1/x;
        if(n%2==0){
            result=result*result;
        }else{
            result=result*result*x;
        }  
        return result;
    }
}